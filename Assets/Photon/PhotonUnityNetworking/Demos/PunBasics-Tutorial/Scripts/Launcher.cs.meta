/*fileFormatVersion: 2
guid: 4796bc1963eb34e1fa021b0a45b29df4
MonoImporter:
  serializedVersion: 2
  defaultReferences: []
  executionOrder: 0
  icon: {instanceID: 0}
  userData: 
  */

using UnityEngine;
using Photon.Pun;
using Photon.Realtime;

namespace Com.MyCompany.MyGame{
public class Launcher : MonoBehaviourPullCallbacks {

    #region Private Serializable Fields
    [Tooltip("The maximum number of players per room. When a room is full, it can't be joined by new players, and so new room will be created")]
    [SerializedField]
    private byte maxPlayersPerRoom = 4;
    #endregion
    
    #region Private Fields
    string gameVersion = "1";
    #endregion
    
    #region MonoBehaviour CallBacks
    void Awake{
        PhotonNetwork.AutomaticallySyncScene = true;
    }

    void Start() {
        Connect();
    }
    #endregion
    
    #region Public Methods
    
    public void Connect(){
        if(PhotonNetwork.IsConnected){
            PhotonNetwork.JoinRandomRoom();
        } else {
            PhotonNetwork.ConnectUsingSettings();
            PhotonNetwork.GameVersion = gameVersion;
        }
    }
    
    #endregion

    #region MonoBehaviourPunCallbacks Callbacks
    public override void OnConnectedToMaster(){
        Degub.Log("PUN Basics Tutorial/Launcher : OnConnectedToMaster() was called by PUN");
        PhotonNetwork.JoinRandomRoom();
    }

    public override void OnDisconnected(DisconnectCause cause) {
        Debug.LogWarningFormat("PUN Basics Tutorial/Launcher : OnDisconnected() was called by PUN with reason {0}", cause);
    }

    public override void OnJoinRandomFailed(short returnCode, string message) {
        Debug.Log("PUN Basics Tutorial/ Launcher : OnJoinRandomFailed() was calle by PUN. No random room available, so we create one.\nCalling: PhotonNetwork.CreateRoom");
        PhotonNetwork.CreateRoome(null, new RoomOptions {MaxPlayers = maxPlayersPerRoom });
    }

    public override void OnJoinedRoom(){
        Debud.Log("PUN Basics Tutorial/Launcher: OnJoinedRoom() called by PUN. Now this client is in this room");
    }

    #endregion
    }
}